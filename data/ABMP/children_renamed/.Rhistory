# new_col <- cumsum(new_D3$fb)
# new_col_trial <- 1:nrow(new_D3)
# new_cols <- cbind(new_col, new_col_trial)
# new_D3 <- cbind(new_cols,new_D3)
# colnames(new_D3)[c(1,2)] <- c("cumsum_fb", "trial_separate")
# new_D <- rbind(new_D1,new_D2,new_D3)
# ggplot(data=new_D, aes(x=trial_separate, y=cumsum_fb, group=vFile, color=vFile)) +
#   geom_line()+
#   geom_point()
setwd(diroutput)
diroutput <- "N:/Users/phaller/mri_task_analysis/data/children_renamed/Out"  # output dir must exist
setwd(dirout)
setwd(diroutput)
getwd()
cd Out
dir
cd (Out)
cd ..
?ggsave
df_subj_block
attach(df_subj_block)
qplot(df_subj_block,  binwidth = 1.0, geom = "histogram", xlab = "RTs", ylab = "Frequency",
y = ..density.., fill = I("white"), colour = I("black")) +
stat_density(geom = "line")
df_subj_block
df_subj_block[[j]]
df_subj_block[[j]]$RT
df_subj_block$RT[[j]]
qplot(df_subj_block$RT,  binwidth = 1.0, geom = "histogram", xlab = "RTs", ylab = "Frequency",
y = ..density.., fill = I("white"), colour = I("black")) +
stat_density(geom = "line")
qplot(df_subj_block$RT,  binwidth = 0.1, geom = "histogram", xlab = "RTs", ylab = "Frequency",
y = ..density.., fill = I("white"), colour = I("black")) +
stat_density(geom = "line")
qplot(df_subj_block$RT,  binwidth = 0.1, geom = "histogram", xlab = "RTs", ylab = "Frequency",
y = ..density.., fill = I("red"),alpha=.4, colour = I("black")) +
stat_density(geom = "line")
df_subj_block$RT
qplot(df_subj_block$RT,  binwidth = 0.1, geom = "histogram", xlab = "RTs", ylab = "Frequency",
y = ..density.., fill = I("red"),alpha=.2, colour = I("black")) +
stat_density(geom = "line")+
scale_y_continuous(breaks = c(0,1,2,3,4,5,6,7,8,9,10),limits=c(0,10))  +
scale_x_continuous(breaks = c(0,0.25,0.5,0.75,1,1.25,1.5,1.75,2,2.25,2.5,2.75,3),limits=c(0,4))
qplot(df_subj_block$RT,  binwidth = 0.1, geom = "histogram", xlab = "RTs", ylab = "Frequency",
y = ..density.., fill = I("red"),alpha=.2, colour = I("black")) +
stat_density(geom = "line")+
scale_y_continuous(breaks = c(0,0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1),limits=c(0,1.5))  +
scale_x_continuous(breaks = c(0,0.25,0.5,0.75,1,1.25,1.5,1.75,2,2.25,2.5,2.75,3),limits=c(0,4))
qplot(df_subj_block$RT,  binwidth = 0.1, geom = "histogram", xlab = "RTs (sec)", ylab = "Frequency",
y = ..density.., fill = I("red"),alpha=.2, colour = I("black")) +
stat_density(geom = "line")+
scale_y_continuous(breaks = c(0,0.5,1,1.5,2,2.5,3),limits=c(0,3))  +
scale_x_continuous(breaks = c(0,0.25,0.5,0.75,1,1.25,1.5,1.75,2,2.25,2.5,2.75,3),limits=c(0,4))
ggsave(hplot, file=paste("Hist_subj",i,"_B",j,".png", sep=""),width = 6, height = 6, scale=2)
qplot(df_subj_block$RT,  binwidth = 0.1, geom = "histogram", xlab = "RTs (sec)", ylab = "Frequency",
y = ..density.., fill = I("red"),alpha=.2, colour = I("black")) +
stat_density(geom = "line")+
scale_y_continuous(breaks = c(0,0.5,1,1.5,2,2.5,3),limits=c(0,2))  +
scale_x_continuous(breaks = c(0,0.25,0.5,0.75,1,1.25,1.5,1.75,2,2.25,2.5,2.75,3),limits=c(0,4))
ggtitle(paste("subj ",i,"Block ",j," RTs",sep=""));
qplot(df_subj_block$RT,  binwidth = 0.1, geom = "histogram", xlab = "RTs (sec)", ylab = "Frequency",
y = ..density.., fill = I("red"),alpha=.2, colour = I("black")) +
stat_density(geom = "line")+
scale_y_continuous(breaks = c(0,0.5,1,1.5,2,2.5,3),limits=c(0,2))  +
scale_x_continuous(breaks = c(0,0.25,0.5,0.75,1,1.25,1.5,1.75,2,2.25,2.5,2.75,3),limits=c(0,4))+
ggtitle(paste("subj ",i,"Block ",j," RTs",sep=""))
qplot(df_subj_block$RT,  binwidth = 0.1, geom = "histogram", xlab = "RTs (sec)", ylab = "Frequency",
y = ..density.., fill = I("red"),alpha=.2, colour = I("black")) +
stat_density(geom = "line")+
scale_y_continuous(breaks = c(0,0.5,1,1.5,2,2.5,3),limits=c(0,2))  +
scale_x_continuous(breaks = c(0,0.25,0.5,0.75,1,1.25,1.5,1.75,2,2.25,2.5,2.75,3),limits=c(0,4))+
ggtitle(paste("subj",i,"Block-",j," RTs",sep=""))
qplot(df_subj_block$RT,  binwidth = 0.1, geom = "histogram", xlab = "RTs (sec)", ylab = "Frequency",
y = ..density.., fill = I("red"),alpha=.2, colour = I("black")) +
stat_density(geom = "line")+
scale_y_continuous(breaks = c(0,0.5,1,1.5,2,2.5,3),limits=c(0,2))  +
scale_x_continuous(breaks = c(0,0.25,0.5,0.75,1,1.25,1.5,1.75,2,2.25,2.5,2.75,3),limits=c(0,4))
attach(df_subj_block)
hplot <- qplot(df_subj_block$RT,  binwidth = 0.1, geom = "histogram", xlab = "RTs (sec)",
ylab = "Frequency",show.legend = FALSE,
y = ..density.., fill = I("red"),alpha=.2, colour = I("black")) +
stat_density(geom = "line")+
scale_y_continuous(breaks = c(0,0.5,1,1.5,2,2.5,3),limits=c(0,2))  +
scale_x_continuous(breaks = c(0,0.25,0.5,0.75,1,1.25,1.5,1.75,2,2.25,2.5,2.75,3),limits=c(0,4))+
ggtitle(paste("subj",i,"Block-",j," RTs",sep=""))
ggsave(hplot, file=paste("Hist_subj",i,"_B",j,".png", sep=""),width = 6, height = 6, scale=2)
library(readr)
library(rstudioapi)
library(readr)
library(data.table)
library(ggplot2)
library(dplyr)
library(wesanderson)
#set inputs
dirinput <- "N:/Users/phaller/mri_task_analysis/data/children_renamed"
diroutput <- "N:/Users/phaller/mri_task_analysis/data/children_renamed/Out"  # output dir must exist
# get list of files
files <- dir(pattern=".txt")
# -------------------------------------------------------------------------------------------------------------------------------------------
# Gather all data
# -------------------------------------------------------------------------------------------------------------------------------------------
setwd(dirinput)
datalist <- list()
for (i in 1:length(files)){
#Read file
no_col <- max(count.fields(files[i], sep = "\t"))
D <- read_delim(files[i],"\t", escape_double = FALSE, locale = locale(), trim_ws = TRUE)
#exclude practice trials and unnecessary rows (e.g., with avg_resp).
D <- D[2:dim(D)[1],]
D <- D[which(D$block==1|D$block==2|D$block==3|D$block==4),]
#minor adjustments
colnames(D)[grep("rt",colnames(D))] <- "RT"
colnames(D) <- colnames(D)[c(1:(which(names(D)=="C/I")-1),(which(names(D)=="C/I")+1):length(colnames(D)))]
D<- D[,1:(length(D)-1)]
D[names(D)[names(D) == "RT"]] <-  D[names(D)[names(D) == "RT"]]/1000 # RTs to seconds
# if frame does contain the colname resp -> change
# don't use grep here, because it will find all instances of 'resp' (even colnames with name respOnset)
names(D)[names(D) == ",result"] <- "result"
names(D)[names(D) == "V-file"] <- "vFile"
names(D)[names(D) == "V-File"] <- "vFile"
names(D)[names(D) == "A-file"] <- "aFile"
names(D)[names(D) == "A-File"] <- "aFile"
names(D)[names(D) == "Vstim"] <- "vStim"
names(D)[names(D) == "Astim"] <- "aStim"
#add subjects
D <- as_tibble(cbind(rep(substr(files[i],1,3),dim(D)[1]),D)) # use "as_tibble" to avoid issues with the unicode symbols display
colnames(D)[1] <- "subjID"
datalist[[i]] <- D
}
Gather <- as_tibble(data.table::rbindlist(datalist, fill=TRUE)) # combine all data frames in one
# -------------------------------------------------------------------------------------------------------------------------------------------
# Plots
# -------------------------------------------------------------------------------------------------------------------------------------------
setwd(diroutput)
#write.table(Gather,file = "performance_all_aduls.txt",sep="\t",row.names = FALSE,quote=FALSE)
#rm(new_D1)
#rm(new_D2)
#rm(new_D3)
subj <- unique(Gather$subjID)
df_subj <- list()
Gather$fb = as.integer(Gather$fb)
#loop thru subject,then block, then symbol
for (i in 1:length(subj)){
df_subj[[i]] <- subset(Gather, subjID == subj[i])
blocks <- unique(df_subj[[i]]$block)
for (j in 1:length(blocks)){
df_subj_block <- subset(df_subj[[i]],block==j)
symbols <- unique(df_subj_block$vFile)
df_subj_block_symbol <- list()
for (k in 1:length(symbols)){
if (length(unique(df_subj_block$vFile))>=2){
df_subj_block_symbol[[k]] <- subset(df_subj_block, vFile==symbols[k])
new_col <- cumsum(df_subj_block_symbol[[k]]$fb)
new_col_trial <- 1:nrow(df_subj_block_symbol[[k]])
new_cols <- cbind(new_col,new_col_trial)
df_subj_block_symbol[[k]]<- as_tibble(cbind(new_cols,df_subj_block_symbol[[k]]))
colnames(df_subj_block_symbol[[k]])[c(1,2)] <- c("cumsum_fb", "trial_separate")
}
}
#PLOT CUMULATIVE PROBABILITIES PER STIMULI
data2plot<- as_tibble(data.table::rbindlist(df_subj_block_symbol) )
attach(data2plot)
plot <- ggplot(data=data2plot, aes(x=trial_separate, y=cumsum_fb, group=vFile, color=vFile)) +
geom_line()+ geom_point()+
scale_x_continuous(breaks = unique(trial_separate),limits=c(0,length(unique(trial_separate))))  +
scale_y_continuous(breaks = unique(cumsum_fb),limits=c(0,length(unique(cumsum_fb))))
ggsave(plot, file=paste("plot_subj",i,"_B",j,".png", sep=""),width = 6, height = 6, scale=2)
#PLOT HISTOGRAM
attach(df_subj_block)
hplot <- qplot(df_subj_block$RT,  binwidth = 0.1, geom = "histogram", xlab = "RTs (sec)",
ylab = "Frequency",show.legend = FALSE,
y = ..density.., fill = I("red"),alpha=.2, colour = I("black")) +
stat_density(geom = "line")+
scale_y_continuous(breaks = c(0,0.5,1,1.5,2,2.5,3),limits=c(0,2))  +
scale_x_continuous(breaks = c(0,0.25,0.5,0.75,1,1.25,1.5,1.75,2,2.25,2.5,2.75,3),limits=c(0,4))+
ggtitle(paste("subj",i,"Block-",j," RTs",sep=""))
ggsave(hplot, file=paste("Hist_subj",i,"_B",j,".png", sep=""),width = 6, height = 6, scale=2)
}
}
# # for 1 case
# new_D <- subset(Gather, subjID == 1 & block==1)
# new_D$integer = as.integer(new_D$trial)
# symbols <- unique(new_D$vFile)
# new_D1 <- subset(Gather, subjID == 1 & block==1 & vFile==symbols[1])
# new_col <- cumsum(new_D1$fb)
# new_col_trial <- 1:nrow(new_D1)
# new_cols <- cbind(new_col, new_col_trial)
# new_D1 <- cbind(new_cols,new_D1)
# colnames(new_D1)[c(1,2)] <- c("cumsum_fb", "trial_separate")
# new_D2 <- subset(Gather, subjID == 1 & block==1 & vFile==symbols[2])
# new_col <- cumsum(new_D2$fb)
# new_col_trial <- 1:nrow(new_D2)
# new_cols <- cbind(new_col, new_col_trial)
# new_D2 <- cbind(new_cols,new_D2)
# colnames(new_D2)[c(1,2)] <- c("cumsum_fb", "trial_separate")
# new_D3 <- subset(Gather, subjID == 1 & block==1 & vFile==symbols[3])
# new_col <- cumsum(new_D3$fb)
# new_col_trial <- 1:nrow(new_D3)
# new_cols <- cbind(new_col, new_col_trial)
# new_D3 <- cbind(new_cols,new_D3)
# colnames(new_D3)[c(1,2)] <- c("cumsum_fb", "trial_separate")
# new_D <- rbind(new_D1,new_D2,new_D3)
# ggplot(data=new_D, aes(x=trial_separate, y=cumsum_fb, group=vFile, color=vFile)) +
#   geom_line()+
#   geom_point()
dev.off()
length(blocks)
library(readr)
library(rstudioapi)
library(readr)
library(data.table)
library(ggplot2)
library(dplyr)
library(wesanderson)
#set inputs
dirinput <- "N:/Users/phaller/mri_task_analysis/data/children_renamed"
diroutput <- "N:/Users/phaller/mri_task_analysis/data/children_renamed/Out"  # output dir must exist
# get list of files
files <- dir(pattern=".txt")
# -------------------------------------------------------------------------------------------------------------------------------------------
# Gather all data
# -------------------------------------------------------------------------------------------------------------------------------------------
setwd(dirinput)
datalist <- list()
for (i in 1:length(files)){
#Read file
no_col <- max(count.fields(files[i], sep = "\t"))
D <- read_delim(files[i],"\t", escape_double = FALSE, locale = locale(), trim_ws = TRUE)
#exclude practice trials and unnecessary rows (e.g., with avg_resp).
D <- D[2:dim(D)[1],]
D <- D[which(D$block==1|D$block==2|D$block==3|D$block==4),]
#minor adjustments
colnames(D)[grep("rt",colnames(D))] <- "RT"
colnames(D) <- colnames(D)[c(1:(which(names(D)=="C/I")-1),(which(names(D)=="C/I")+1):length(colnames(D)))]
D<- D[,1:(length(D)-1)]
D[names(D)[names(D) == "RT"]] <-  D[names(D)[names(D) == "RT"]]/1000 # RTs to seconds
# if frame does contain the colname resp -> change
# don't use grep here, because it will find all instances of 'resp' (even colnames with name respOnset)
names(D)[names(D) == ",result"] <- "result"
names(D)[names(D) == "V-file"] <- "vFile"
names(D)[names(D) == "V-File"] <- "vFile"
names(D)[names(D) == "A-file"] <- "aFile"
names(D)[names(D) == "A-File"] <- "aFile"
names(D)[names(D) == "Vstim"] <- "vStim"
names(D)[names(D) == "Astim"] <- "aStim"
#add subjects
D <- as_tibble(cbind(rep(substr(files[i],1,3),dim(D)[1]),D)) # use "as_tibble" to avoid issues with the unicode symbols display
colnames(D)[1] <- "subjID"
datalist[[i]] <- D
}
Gather <- as_tibble(data.table::rbindlist(datalist, fill=TRUE)) # combine all data frames in one
# -------------------------------------------------------------------------------------------------------------------------------------------
# Plots
# -------------------------------------------------------------------------------------------------------------------------------------------
setwd(diroutput)
#write.table(Gather,file = "performance_all_aduls.txt",sep="\t",row.names = FALSE,quote=FALSE)
#rm(new_D1)
#rm(new_D2)
#rm(new_D3)
subj <- unique(Gather$subjID)
df_subj <- list()
Gather$fb = as.integer(Gather$fb)
#loop thru subject,then block, then symbol
for (i in 1:length(subj)){
df_subj[[i]] <- subset(Gather, subjID == subj[i])
blocks <- unique(df_subj[[i]]$block)
for (j in 1:length(blocks)){
df_subj_block <- subset(df_subj[[i]],block==j)
symbols <- unique(df_subj_block$vFile)
df_subj_block_symbol <- list()
for (k in 1:length(symbols)){
if (length(unique(df_subj_block$vFile))>=2){
df_subj_block_symbol[[k]] <- subset(df_subj_block, vFile==symbols[k])
new_col <- cumsum(df_subj_block_symbol[[k]]$fb)
new_col_trial <- 1:nrow(df_subj_block_symbol[[k]])
new_cols <- cbind(new_col,new_col_trial)
df_subj_block_symbol[[k]]<- as_tibble(cbind(new_cols,df_subj_block_symbol[[k]]))
colnames(df_subj_block_symbol[[k]])[c(1,2)] <- c("cumsum_fb", "trial_separate")
}
}
#PLOT CUMULATIVE PROBABILITIES PER STIMULI
data2plot<- as_tibble(data.table::rbindlist(df_subj_block_symbol) )
attach(data2plot)
plot <- ggplot(data=data2plot, aes(x=trial_separate, y=cumsum_fb, group=vFile, color=vFile)) +
geom_line()+ geom_point()+
scale_x_continuous(breaks = unique(trial_separate),limits=c(0,length(unique(trial_separate))))  +
scale_y_continuous(breaks = unique(cumsum_fb),limits=c(0,length(unique(cumsum_fb))))
ggsave(plot, file=paste("plot_subj",i,"_B",j,".png", sep=""),width = 6, height = 6, scale=1)
#PLOT HISTOGRAM
attach(df_subj_block)
hplot <- qplot(df_subj_block$RT,  binwidth = 0.1, geom = "histogram", xlab = "RTs (sec)",
ylab = "Frequency",show.legend = FALSE,
y = ..density.., fill = I("red"),alpha=.2, colour = I("black")) +
stat_density(geom = "line")+
scale_y_continuous(breaks = c(0,0.5,1,1.5,2,2.5,3),limits=c(0,4))  +
scale_x_continuous(breaks = c(0,0.25,0.5,0.75,1,1.25,1.5,1.75,2,2.25,2.5,2.75,3),limits=c(0,4))+
ggtitle(paste("subj",i,"Block-",j," RTs",sep=""))
ggsave(hplot, file=paste("Hist_subj",i,"_B",j,".png", sep=""),width = 6, height = 6, scale=1)
}
}
# # for 1 case
# new_D <- subset(Gather, subjID == 1 & block==1)
# new_D$integer = as.integer(new_D$trial)
# symbols <- unique(new_D$vFile)
# new_D1 <- subset(Gather, subjID == 1 & block==1 & vFile==symbols[1])
# new_col <- cumsum(new_D1$fb)
# new_col_trial <- 1:nrow(new_D1)
# new_cols <- cbind(new_col, new_col_trial)
# new_D1 <- cbind(new_cols,new_D1)
# colnames(new_D1)[c(1,2)] <- c("cumsum_fb", "trial_separate")
# new_D2 <- subset(Gather, subjID == 1 & block==1 & vFile==symbols[2])
# new_col <- cumsum(new_D2$fb)
# new_col_trial <- 1:nrow(new_D2)
# new_cols <- cbind(new_col, new_col_trial)
# new_D2 <- cbind(new_cols,new_D2)
# colnames(new_D2)[c(1,2)] <- c("cumsum_fb", "trial_separate")
# new_D3 <- subset(Gather, subjID == 1 & block==1 & vFile==symbols[3])
# new_col <- cumsum(new_D3$fb)
# new_col_trial <- 1:nrow(new_D3)
# new_cols <- cbind(new_col, new_col_trial)
# new_D3 <- cbind(new_cols,new_D3)
# colnames(new_D3)[c(1,2)] <- c("cumsum_fb", "trial_separate")
# new_D <- rbind(new_D1,new_D2,new_D3)
# ggplot(data=new_D, aes(x=trial_separate, y=cumsum_fb, group=vFile, color=vFile)) +
#   geom_line()+
#   geom_point()
library(readr)
library(rstudioapi)
library(readr)
library(data.table)
library(ggplot2)
library(dplyr)
library(wesanderson)
#set inputs
dirinput <- "N:/Users/phaller/mri_task_analysis/data/children_renamed"
diroutput <- "N:/Users/phaller/mri_task_analysis/data/children_renamed/Out"  # output dir must exist
# get list of files
files <- dir(pattern=".txt")
# -------------------------------------------------------------------------------------------------------------------------------------------
# Gather all data
# -------------------------------------------------------------------------------------------------------------------------------------------
setwd(dirinput)
datalist <- list()
for (i in 1:length(files)){
#Read file
no_col <- max(count.fields(files[i], sep = "\t"))
D <- read_delim(files[i],"\t", escape_double = FALSE, locale = locale(), trim_ws = TRUE)
#exclude practice trials and unnecessary rows (e.g., with avg_resp).
D <- D[2:dim(D)[1],]
D <- D[which(D$block==1|D$block==2|D$block==3|D$block==4),]
#minor adjustments
colnames(D)[grep("rt",colnames(D))] <- "RT"
colnames(D) <- colnames(D)[c(1:(which(names(D)=="C/I")-1),(which(names(D)=="C/I")+1):length(colnames(D)))]
D<- D[,1:(length(D)-1)]
D[names(D)[names(D) == "RT"]] <-  D[names(D)[names(D) == "RT"]]/1000 # RTs to seconds
# if frame does contain the colname resp -> change
# don't use grep here, because it will find all instances of 'resp' (even colnames with name respOnset)
names(D)[names(D) == ",result"] <- "result"
names(D)[names(D) == "V-file"] <- "vFile"
names(D)[names(D) == "V-File"] <- "vFile"
names(D)[names(D) == "A-file"] <- "aFile"
names(D)[names(D) == "A-File"] <- "aFile"
names(D)[names(D) == "Vstim"] <- "vStim"
names(D)[names(D) == "Astim"] <- "aStim"
#add subjects
D <- as_tibble(cbind(rep(substr(files[i],1,3),dim(D)[1]),D)) # use "as_tibble" to avoid issues with the unicode symbols display
colnames(D)[1] <- "subjID"
datalist[[i]] <- D
}
Gather <- as_tibble(data.table::rbindlist(datalist, fill=TRUE)) # combine all data frames in one
# -------------------------------------------------------------------------------------------------------------------------------------------
# Plots
# -------------------------------------------------------------------------------------------------------------------------------------------
setwd(diroutput)
#write.table(Gather,file = "performance_all_aduls.txt",sep="\t",row.names = FALSE,quote=FALSE)
#rm(new_D1)
#rm(new_D2)
#rm(new_D3)
subj <- unique(Gather$subjID)
df_subj <- list()
Gather$fb = as.integer(Gather$fb)
#loop thru subject,then block, then symbol
for (i in 1:length(subj)){
df_subj[[i]] <- subset(Gather, subjID == subj[i])
blocks <- unique(df_subj[[i]]$block)
for (j in 1:length(blocks)){
df_subj_block <- subset(df_subj[[i]],block==j)
symbols <- unique(df_subj_block$vFile)
df_subj_block_symbol <- list()
for (k in 1:length(symbols)){
if (length(unique(df_subj_block$vFile))>=2){
df_subj_block_symbol[[k]] <- subset(df_subj_block, vFile==symbols[k])
new_col <- cumsum(df_subj_block_symbol[[k]]$fb)
new_col_trial <- 1:nrow(df_subj_block_symbol[[k]])
new_cols <- cbind(new_col,new_col_trial)
df_subj_block_symbol[[k]]<- as_tibble(cbind(new_cols,df_subj_block_symbol[[k]]))
colnames(df_subj_block_symbol[[k]])[c(1,2)] <- c("cumsum_fb", "trial_separate")
}
}
#PLOT CUMULATIVE PROBABILITIES PER STIMULI
data2plot<- as_tibble(data.table::rbindlist(df_subj_block_symbol) )
attach(data2plot)
plot <- ggplot(data=data2plot, aes(x=trial_separate, y=cumsum_fb, group=vFile, color=vFile)) +
geom_line()+ geom_point()+
scale_x_continuous(breaks = unique(trial_separate),limits=c(0,length(unique(trial_separate))))  +
scale_y_continuous(breaks = unique(cumsum_fb),limits=c(0,length(unique(cumsum_fb))))
ggsave(plot, file=paste("plot_subj",i,"_B",j,".png", sep=""),width = 6, height = 6, scale=1)
#PLOT HISTOGRAM
attach(df_subj_block)
hplot <- qplot(df_subj_block$RT,  binwidth = 0.1, geom = "histogram", xlab = "RTs (sec)",
ylab = "Frequency",show.legend = FALSE,
y = ..density.., fill = I("red"),alpha=.2, colour = I("black")) +
stat_density(geom = "line")+
scale_y_continuous(breaks = c(0,0.5,1,1.5,2,2.5,3),limits=c(0,4))  +
scale_x_continuous(breaks = c(0,0.25,0.5,0.75,1,1.25,1.5,1.75,2,2.25,2.5,2.75,3,3.25,3.5,3.75,4),limits=c(0,4))+
ggtitle(paste("subj",i,"Block-",j," RTs",sep=""))
ggsave(hplot, file=paste("Hist_subj",i,"_B",j,".png", sep=""),width = 6, height = 6, scale=1)
}
}
library(readr)
library(rstudioapi)
library(readr)
library(data.table)
library(ggplot2)
library(dplyr)
library(wesanderson)
#set inputs
dirinput <- "N:/Users/phaller/mri_task_analysis/data/children_renamed"
diroutput <- "N:/Users/phaller/mri_task_analysis/data/children_renamed/Out"  # output dir must exist
# get list of files
files <- dir(pattern=".txt")
# -------------------------------------------------------------------------------------------------------------------------------------------
# Gather all data
# -------------------------------------------------------------------------------------------------------------------------------------------
setwd(dirinput)
datalist <- list()
for (i in 1:length(files)){
#Read file
no_col <- max(count.fields(files[i], sep = "\t"))
D <- read_delim(files[i],"\t", escape_double = FALSE, locale = locale(), trim_ws = TRUE)
#exclude practice trials and unnecessary rows (e.g., with avg_resp).
D <- D[2:dim(D)[1],]
D <- D[which(D$block==1|D$block==2|D$block==3|D$block==4),]
#minor adjustments
colnames(D)[grep("rt",colnames(D))] <- "RT"
colnames(D) <- colnames(D)[c(1:(which(names(D)=="C/I")-1),(which(names(D)=="C/I")+1):length(colnames(D)))]
D<- D[,1:(length(D)-1)]
D[names(D)[names(D) == "RT"]] <-  D[names(D)[names(D) == "RT"]]/1000 # RTs to seconds
# if frame does contain the colname resp -> change
# don't use grep here, because it will find all instances of 'resp' (even colnames with name respOnset)
names(D)[names(D) == ",result"] <- "result"
names(D)[names(D) == "V-file"] <- "vFile"
names(D)[names(D) == "V-File"] <- "vFile"
names(D)[names(D) == "A-file"] <- "aFile"
names(D)[names(D) == "A-File"] <- "aFile"
names(D)[names(D) == "Vstim"] <- "vStim"
names(D)[names(D) == "Astim"] <- "aStim"
#add subjects
D <- as_tibble(cbind(rep(substr(files[i],1,3),dim(D)[1]),D)) # use "as_tibble" to avoid issues with the unicode symbols display
colnames(D)[1] <- "subjID"
datalist[[i]] <- D
}
Gather <- as_tibble(data.table::rbindlist(datalist, fill=TRUE)) # combine all data frames in one
# -------------------------------------------------------------------------------------------------------------------------------------------
# Plots
# -------------------------------------------------------------------------------------------------------------------------------------------
setwd(diroutput)
#write.table(Gather,file = "performance_all_aduls.txt",sep="\t",row.names = FALSE,quote=FALSE)
#rm(new_D1)
#rm(new_D2)
#rm(new_D3)
subj <- unique(Gather$subjID)
df_subj <- list()
Gather$fb = as.integer(Gather$fb)
#loop thru subject,then block, then symbol
for (i in 1:length(subj)){
df_subj[[i]] <- subset(Gather, subjID == subj[i])
blocks <- unique(df_subj[[i]]$block)
for (j in 1:length(blocks)){
df_subj_block <- subset(df_subj[[i]],block==j)
symbols <- unique(df_subj_block$vFile)
df_subj_block_symbol <- list()
for (k in 1:length(symbols)){
if (length(unique(df_subj_block$vFile))>=2){
df_subj_block_symbol[[k]] <- subset(df_subj_block, vFile==symbols[k])
new_col <- cumsum(df_subj_block_symbol[[k]]$fb)
new_col_trial <- 1:nrow(df_subj_block_symbol[[k]])
new_cols <- cbind(new_col,new_col_trial)
df_subj_block_symbol[[k]]<- as_tibble(cbind(new_cols,df_subj_block_symbol[[k]]))
colnames(df_subj_block_symbol[[k]])[c(1,2)] <- c("cumsum_fb", "trial_separate")
}
}
#PLOT CUMULATIVE PROBABILITIES PER STIMULI
data2plot<- as_tibble(data.table::rbindlist(df_subj_block_symbol) )
attach(data2plot)
plot <- ggplot(data=data2plot, aes(x=trial_separate, y=cumsum_fb, group=vFile, color=vFile)) +
geom_line()+ geom_point()+
scale_x_continuous(breaks = unique(trial_separate),limits=c(0,length(unique(trial_separate))))  +
scale_y_continuous(breaks = unique(cumsum_fb),limits=c(0,length(unique(cumsum_fb))))
ggsave(plot, file=paste("plot_subj",i,"_B",j,".png", sep=""),width = 6, height = 6, scale=1)
#PLOT HISTOGRAM
attach(df_subj_block)
hplot <- qplot(df_subj_block$RT,  binwidth = 0.1, geom = "histogram", xlab = "RTs (sec)",
ylab = "Frequency",show.legend = FALSE,
y = ..density.., fill = I("red"),alpha=.2, colour = I("black")) +
stat_density(geom = "line",show.legend = FALSE)+
scale_y_continuous(breaks = c(0,0.5,1,1.5,2,2.5,3),limits=c(0,4))  +
scale_x_continuous(breaks = c(0,0.25,0.5,0.75,1,1.25,1.5,1.75,2,2.25,2.5,2.75,3,3.25,3.5,3.75,4),limits=c(0,4))+
ggtitle(paste("subj",i,"Block-",j," RTs",sep=""))
ggsave(hplot, file=paste("Hist_subj",i,"_B",j,".png", sep=""),width = 6, height = 6, scale=1)
}
}
