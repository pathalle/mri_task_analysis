}
attach(data_octile)
ggplot(data=data_octile[which(data_octile$block=="Block 2"),], aes(x=trial_separate, y=cumulsum_fb, group=aStim, color=aStim)) +
geom_line()+
geom_point(aes(fill=aStim),colour="black",alpha=.5, shape=21, size=3,position=position_dodge(0.2))+
scale_x_continuous(breaks = unique(trial_separate),limits=c(0.5,8.5))  +
scale_y_continuous(breaks = -9:9,limits=c(-9,9)) +
ylab("Cumulative sum of feedback")+
xlab("Trial per stimulus") +
guides(alpha=FALSE)+
theme(axis.title = element_text(size=12),
title = element_text(size=14),
plot.subtitle = element_text(size=14,color="darkblue"),
legend.text=element_text(size=12),
panel.grid.major = element_line(colour="white"),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "gray88"))+
facet_wrap( ~ subj_idx, ncol=3) +
labs(title="Cumulative sum of hits per astim (2x4[32][B2])")
data_octile <- split_trials_octile(data_with_cumulsum) # make sure you uncomment the last line of the function with 32-version
attach(data_octile)
ggplot(data=data_octile[which(data_octile$block=="Block 2"),], aes(x=trial_separate, y=cumulsum_fb, group=aStim, color=aStim)) +
geom_line()+
geom_point(aes(fill=aStim),colour="black",alpha=.5, shape=21, size=3,position=position_dodge(0.2))+
scale_x_continuous(breaks = unique(trial_separate),limits=c(0.5,8.5))  +
scale_y_continuous(breaks = -9:9,limits=c(-9,9)) +
ylab("Cumulative sum of feedback")+
xlab("Trial per stimulus") +
guides(alpha=FALSE)+
theme(axis.title = element_text(size=12),
title = element_text(size=14),
plot.subtitle = element_text(size=14,color="darkblue"),
legend.text=element_text(size=12),
panel.grid.major = element_line(colour="white"),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "gray88"))+
facet_wrap( ~ subj_idx, ncol=3) +
labs(title="Cumulative sum of hits per astim (2x4[32][B2])")
###### get individual learning trajectories
attach(data_octile)
ggplot(data=data_octile[which(data_octile$block=="Block 2"),], aes(x=trial_separate, y=cumulsum_fb, group=aStim, color=aStim)) +
geom_line()+
geom_point(aes(fill=aStim),colour="black",alpha=.5, shape=21, size=3,position=position_dodge(0.2))+
scale_x_continuous(breaks = unique(trial_separate),limits=c(0.5,8.5))  +
scale_y_continuous(breaks = -9:9,limits=c(-9,9)) +
ylab("Cumulative sum of feedback")+
xlab("Trial per stimulus") +
guides(alpha=FALSE)+
theme(axis.title = element_text(size=12),
title = element_text(size=14),
plot.subtitle = element_text(size=14,color="darkblue"),
legend.text=element_text(size=12),
panel.grid.major = element_line(colour="white"),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "gray88"))+
facet_wrap( ~ subj_idx, ncol=3) +
labs(title="Cumulative sum of hits per astim (2x3[24][B2])")
attach(data_octile)
ggplot(data=data_octile[which(data_octile$block=="Block 1"),], aes(x=trial_separate, y=cumulsum_fb, group=aStim, color=aStim)) +
geom_line()+
geom_point(aes(fill=aStim),colour="black",alpha=.5, shape=21, size=3,position=position_dodge(0.2))+
scale_x_continuous(breaks = unique(trial_separate),limits=c(0.5,8.5))  +
scale_y_continuous(breaks = -9:9,limits=c(-9,9)) +
ylab("Cumulative sum of feedback")+
xlab("Trial per stimulus") +
guides(alpha=FALSE)+
theme(axis.title = element_text(size=12),
title = element_text(size=14),
plot.subtitle = element_text(size=14,color="darkblue"),
legend.text=element_text(size=12),
panel.grid.major = element_line(colour="white"),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "gray88"))+
facet_wrap( ~ subj_idx, ncol=3) +
labs(title="Cumulative sum of hits per astim (2x3[24][B1])")
task <- "fbl_kloten"
#set inputs
#dirinput <- "N:/Users/phaller/mri_task_analysis/data/piloting/piloting_kloten/2x3_24"
dirinput <- "N:/Users/phaller/mri_task_analysis/data/piloting/piloting_kloten/2x3_32"
#dirinput <- "N:/Users/phaller/mri_task_analysis/data/piloting/piloting_kloten/2x4"
# make sure output directory exists already
diroutput <- "N:/Users/phaller/mri_task_analysis/data/piloting/analysis/"
setwd(dirinput)
files <- dir(pattern=".txt", recursive=TRUE)
gather_data <- function(files){
# summarize all data in 1 data frame
datalist <- list()
for (i in 1:length(files)){
no_col <- max(count.fields(files[i], sep = "\t"))
D <- read_delim(
files[i],"\t", escape_double = FALSE, locale = locale(), trim_ws = TRUE)
D <- cbind(rep(substr(files[i],17,22),dim(D)[1]),D)
#D<-D[D$resp!=0,] # remove 'too slow ' responses
### Rename and transform some columns
colnames(D)[1] <- "subj_idx"
#D[,1] <- strtoi(D[,1])
D$trial = as.integer(D$trial)
D$aStim = as.integer(D$aStim)
#colnames(D)[grep("rt",colnames(D))] <- "RT"
D[grep("rt",colnames(D))] <- D[grep("rt",colnames(D))]/1000 # RTs in seconds
# don't use grep here, because it will find all instances of 'resp' (even colnames with name respOnset)
#names(D)[names(D) == "fb"] <- "response"
#D <- as_tibble(cbind(D,paste(D$vFile,D$aFile)))
#colnames(D)[ncol(D)] <- "pair"
datalist[[i]] <- D
}
transformed <- data.table::rbindlist(datalist) # combine all data frames in on
return(transformed)
}
compute_cumulative_sums <- function(data){
df_subj <- list()
#data<-data[data$choice!=0,] # remove 'too slow ' responses
new_data <- data[FALSE,]
new_cols <- data.frame(cumsum_fb = integer(0), trial_separate = integer(0))
new_data <- cbind(new_cols,new_data)
for(i in unique(data$subj_idx)){
df_subj[[i]] <- subset(data, subj_idx == i)
for(j in unique(df_subj[[i]]$block)){
df_subj_block <- subset(df_subj[[i]],block==j)
# compute cumulative sum for each auditory stimulus in a given block of a subject
for(k in unique(df_subj_block$aStim)){
df_subj_block_astim <- list()
df_subj_block_astim[[k]] <- subset(df_subj_block, aStim==k )
new_col <- cumsum(df_subj_block_astim[[k]]$fbprime)
new_col_trial <- 1:nrow(df_subj_block_astim[[k]])
new_cols <- cbind(new_col,new_col_trial)
df_subj_block_astim[[k]]<- as_tibble(cbind(new_cols,df_subj_block_astim[[k]]))
colnames(df_subj_block_astim[[k]])[c(1,2)] <- c("cumulsum_fb", "trial_separate")
new_data <- as_tibble(rbind(new_data,df_subj_block_astim[[k]]))
# reorder data
new_data <- new_data[
with(new_data, order(subj_idx, block,trial)),
]
}
}
}
return(as_tibble(new_data))
}
get_summary_stats <- function(data){
### #How many missing responses per block (fb == 2)
miss_per_block <- data %>%
select(subj_idx,RT, fb,block) %>%
filter(fb==2)  %>%
group_by(subjID,block) %>%
tally()
### #RTs per block
RT_per_block <- data %>%
select(subj_idx,RT, fb,block) %>%
filter(fb!=2)  %>%
group_by(subjID, fb,block) %>%
summarise(mean_rt = mean(RT))
### #RTs across blocks
RT_across_blocks <- data %>%
select(subjID,RT, fb) %>%
filter(fb!=2)  %>%
group_by(subjID, fb) %>%
summarise(mean_rt = mean(RT))
## hits per sextile
correct_per_quartile <- data %>%
select(subjID, fb,block, quartile) %>%
filter(fb==1) %>%
group_by(subjID,block,quartile) %>%
tally()
return(list(
"miss_per_block"=miss_per_block,"rt_per_block"=RT_per_block,"rt_across_blocks"=RT_across_blocks,"hits_per_sextile"=correct_per_sextile))
}
split_trials_24 <- function(data){
data$trial <- as.integer(data$trial)
data$quartile <- 0
data[which(data$trial <= 6),]$quartile = 1
data[which(data$trial > 6 & data$trial <= 12),]$quartile = 2
data[which(data$trial > 12 & data$trial <= 18),]$quartile = 3
data[which(data$trial > 18 & data$trial <= 24),]$quartile = 4
data <- data[
with(data, order(subj_idx, block,trial)),
]
return(data)
}
split_trials_32 <- function(data){
data$trial <- as.integer(data$trial)
data$quartile <- 0
data[which(data$trial <= 8),]$quartile = 1
data[which(data$trial > 8 & data$trial <= 16),]$quartile = 2
data[which(data$trial > 16 & data$trial <= 24),]$quartile = 3
data[which(data$trial > 24 & data$trial <= 32),]$quartile = 4
data <- data[
with(data, order(subj_idx, block,trial)),
]
return(data)
}
split_trials_octile <- function(data){
data$trial <- as.integer(data$trial)
data$octile <- 0
data[which(data$trial <= 8),]$octile = 1
data[which(data$trial > 8 & data$trial <= 16),]$octile = 2
data[which(data$trial > 16 & data$trial <= 24),]$octile = 3
#data[which(data$trial > 24 & data$trial <= 32),]$octile = 4
data <- data[
with(data, order(subj_idx, block,trial)),
]
return(data)
}
wes_cols= wes_palette("GrandBudapest1", n = 2)
## load data
data <- gather_data(files)
# redefine fb for visualization
data$fbprime <- rep("NA",nrow(data))
data[which(data$fb==0),]$fbprime = -1
data[which(data$fb==1),]$fbprime = 1
data[which(data$fb==2),]$fbprime = 0
# for the visualization, for the subject who completed block 3, b3 will count as b2
data[which(data$block==3),]$block <- rep(2,nrow(data[which(data$block==3),]))
data$block = as.factor(data$block)
levels(data$block) <- c("Block 1", "Block 2")
data$aStim = as.factor(data$aStim)
split_trials_octile <- function(data){
data$trial <- as.integer(data$trial)
data$octile <- 0
data[which(data$trial <= 8),]$octile = 1
data[which(data$trial > 8 & data$trial <= 16),]$octile = 2
data[which(data$trial > 16 & data$trial <= 24),]$octile = 3
data[which(data$trial > 24 & data$trial <= 32),]$octile = 4
data <- data[
with(data, order(subj_idx, block,trial)),
]
return(data)
}
# compute cumulative sums and quartiles
#data_no_miss <- data[which(data$fb!=2),]
data_with_cumulsum <- compute_cumulative_sums(data)
data_octile <- split_trials_octile(data_with_cumulsum) # make sure you uncomment the last line of the function with 32-version
attach(data_octile)
ggplot(data=data_octile[which(data_octile$block=="Block 1"),], aes(x=trial_separate, y=cumulsum_fb, group=aStim, color=aStim)) +
geom_line()+
geom_point(aes(fill=aStim),colour="black",alpha=.5, shape=21, size=3,position=position_dodge(0.2))+
scale_x_continuous(breaks = unique(trial_separate),limits=c(0.5,12.5))  +
scale_y_continuous(breaks = -12:12,limits=c(-12,12)) +
ylab("Cumulative sum of feedback")+
xlab("Trial per stimulus") +
guides(alpha=FALSE)+
theme(axis.title = element_text(size=12),
title = element_text(size=14),
plot.subtitle = element_text(size=14,color="darkblue"),
legend.text=element_text(size=12),
panel.grid.major = element_line(colour="white"),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "gray88"))+
facet_wrap( ~ subj_idx, ncol=3) +
labs(title="Cumulative sum of hits per astim (2x3[24][B1])")
###### get individual learning trajectories
attach(data_octile)
ggplot(data=data_octile[which(data_octile$block=="Block 1"),], aes(x=trial_separate, y=cumulsum_fb, group=aStim, color=aStim)) +
geom_line()+
geom_point(aes(fill=aStim),colour="black",alpha=.5, shape=21, size=3,position=position_dodge(0.2))+
scale_x_continuous(breaks = unique(trial_separate),limits=c(0.5,13.5))  +
scale_y_continuous(breaks = -12:12,limits=c(-12,12)) +
ylab("Cumulative sum of feedback")+
xlab("Trial per stimulus") +
guides(alpha=FALSE)+
theme(axis.title = element_text(size=12),
title = element_text(size=14),
plot.subtitle = element_text(size=14,color="darkblue"),
legend.text=element_text(size=12),
panel.grid.major = element_line(colour="white"),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "gray88"))+
facet_wrap( ~ subj_idx, ncol=3) +
labs(title="Cumulative sum of hits per astim (2x3[24][B1])")
ggplot(data=data_octile[which(data_octile$block=="Block 1"),], aes(x=trial_separate, y=cumulsum_fb, group=aStim, color=aStim)) +
geom_line()+
geom_point(aes(fill=aStim),colour="black",alpha=.5, shape=21, size=3,position=position_dodge(0.2))+
scale_x_continuous(breaks = unique(trial_separate),limits=c(0.5,13.5))  +
scale_y_continuous(breaks = -12:12,limits=c(-12,12)) +
ylab("Cumulative sum of feedback")+
xlab("Trial per stimulus") +
guides(alpha=FALSE)+
theme(axis.title = element_text(size=12),
title = element_text(size=14),
plot.subtitle = element_text(size=14,color="darkblue"),
legend.text=element_text(size=12),
panel.grid.major = element_line(colour="white"),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "gray88"))+
facet_wrap( ~ subj_idx, ncol=3) +
labs(title="Cumulative sum of hits per astim (2x3[32][B1])")
ggplot(data=data_octile[which(data_octile$block=="Block 1"),], aes(x=trial_separate, y=cumulsum_fb, group=aStim, color=aStim)) +
geom_line()+
geom_point(aes(fill=aStim),colour="black",alpha=.5, shape=21, size=3,position=position_dodge(0.2))+
scale_x_continuous(breaks = unique(trial_separate),limits=c(0.5,13.5))  +
scale_y_continuous(breaks = -13:13,limits=c(-13,13)) +
ylab("Cumulative sum of feedback")+
xlab("Trial per stimulus") +
guides(alpha=FALSE)+
theme(axis.title = element_text(size=12),
title = element_text(size=14),
plot.subtitle = element_text(size=14,color="darkblue"),
legend.text=element_text(size=12),
panel.grid.major = element_line(colour="white"),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "gray88"))+
facet_wrap( ~ subj_idx, ncol=3) +
labs(title="Cumulative sum of hits per astim (2x3[32][B1])")
ggplot(data=data_octile[which(data_octile$block=="Block 2"),], aes(x=trial_separate, y=cumulsum_fb, group=aStim, color=aStim)) +
geom_line()+
geom_point(aes(fill=aStim),colour="black",alpha=.5, shape=21, size=3,position=position_dodge(0.2))+
scale_x_continuous(breaks = unique(trial_separate),limits=c(0.5,13.5))  +
scale_y_continuous(breaks = -13:13,limits=c(-13,13)) +
ylab("Cumulative sum of feedback")+
xlab("Trial per stimulus") +
guides(alpha=FALSE)+
theme(axis.title = element_text(size=12),
title = element_text(size=14),
plot.subtitle = element_text(size=14,color="darkblue"),
legend.text=element_text(size=12),
panel.grid.major = element_line(colour="white"),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "gray88"))+
facet_wrap( ~ subj_idx, ncol=3) +
labs(title="Cumulative sum of hits per astim (2x3[32][B1])")
ggplot(data=data_octile[which(data_octile$block=="Block 2"),], aes(x=trial_separate, y=cumulsum_fb, group=aStim, color=aStim)) +
geom_line()+
geom_point(aes(fill=aStim),colour="black",alpha=.5, shape=21, size=3,position=position_dodge(0.2))+
scale_x_continuous(breaks = unique(trial_separate),limits=c(0.5,13.5))  +
scale_y_continuous(breaks = -13:13,limits=c(-13,13)) +
ylab("Cumulative sum of feedback")+
xlab("Trial per stimulus") +
guides(alpha=FALSE)+
theme(axis.title = element_text(size=12),
title = element_text(size=14),
plot.subtitle = element_text(size=14,color="darkblue"),
legend.text=element_text(size=12),
panel.grid.major = element_line(colour="white"),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "gray88"))+
facet_wrap( ~ subj_idx, ncol=3) +
labs(title="Cumulative sum of hits per astim (2x3[32][B2])")
task <- "fbl_kloten"
#set inputs
#dirinput <- "N:/Users/phaller/mri_task_analysis/data/piloting/piloting_kloten/2x3_24"
#dirinput <- "N:/Users/phaller/mri_task_analysis/data/piloting/piloting_kloten/2x3_32"
dirinput <- "N:/Users/phaller/mri_task_analysis/data/piloting/piloting_kloten/2x4"
# make sure output directory exists already
diroutput <- "N:/Users/phaller/mri_task_analysis/data/piloting/analysis/"
setwd(dirinput)
files <- dir(pattern=".txt", recursive=TRUE)
gather_data <- function(files){
# summarize all data in 1 data frame
datalist <- list()
for (i in 1:length(files)){
no_col <- max(count.fields(files[i], sep = "\t"))
D <- read_delim(
files[i],"\t", escape_double = FALSE, locale = locale(), trim_ws = TRUE)
D <- cbind(rep(substr(files[i],17,22),dim(D)[1]),D)
#D<-D[D$resp!=0,] # remove 'too slow ' responses
### Rename and transform some columns
colnames(D)[1] <- "subj_idx"
#D[,1] <- strtoi(D[,1])
D$trial = as.integer(D$trial)
D$aStim = as.integer(D$aStim)
#colnames(D)[grep("rt",colnames(D))] <- "RT"
D[grep("rt",colnames(D))] <- D[grep("rt",colnames(D))]/1000 # RTs in seconds
# don't use grep here, because it will find all instances of 'resp' (even colnames with name respOnset)
#names(D)[names(D) == "fb"] <- "response"
#D <- as_tibble(cbind(D,paste(D$vFile,D$aFile)))
#colnames(D)[ncol(D)] <- "pair"
datalist[[i]] <- D
}
transformed <- data.table::rbindlist(datalist) # combine all data frames in on
return(transformed)
}
compute_cumulative_sums <- function(data){
df_subj <- list()
#data<-data[data$choice!=0,] # remove 'too slow ' responses
new_data <- data[FALSE,]
new_cols <- data.frame(cumsum_fb = integer(0), trial_separate = integer(0))
new_data <- cbind(new_cols,new_data)
for(i in unique(data$subj_idx)){
df_subj[[i]] <- subset(data, subj_idx == i)
for(j in unique(df_subj[[i]]$block)){
df_subj_block <- subset(df_subj[[i]],block==j)
# compute cumulative sum for each auditory stimulus in a given block of a subject
for(k in unique(df_subj_block$aStim)){
df_subj_block_astim <- list()
df_subj_block_astim[[k]] <- subset(df_subj_block, aStim==k )
new_col <- cumsum(df_subj_block_astim[[k]]$fbprime)
new_col_trial <- 1:nrow(df_subj_block_astim[[k]])
new_cols <- cbind(new_col,new_col_trial)
df_subj_block_astim[[k]]<- as_tibble(cbind(new_cols,df_subj_block_astim[[k]]))
colnames(df_subj_block_astim[[k]])[c(1,2)] <- c("cumulsum_fb", "trial_separate")
new_data <- as_tibble(rbind(new_data,df_subj_block_astim[[k]]))
# reorder data
new_data <- new_data[
with(new_data, order(subj_idx, block,trial)),
]
}
}
}
return(as_tibble(new_data))
}
get_summary_stats <- function(data){
### #How many missing responses per block (fb == 2)
miss_per_block <- data %>%
select(subj_idx,RT, fb,block) %>%
filter(fb==2)  %>%
group_by(subjID,block) %>%
tally()
### #RTs per block
RT_per_block <- data %>%
select(subj_idx,RT, fb,block) %>%
filter(fb!=2)  %>%
group_by(subjID, fb,block) %>%
summarise(mean_rt = mean(RT))
### #RTs across blocks
RT_across_blocks <- data %>%
select(subjID,RT, fb) %>%
filter(fb!=2)  %>%
group_by(subjID, fb) %>%
summarise(mean_rt = mean(RT))
## hits per sextile
correct_per_quartile <- data %>%
select(subjID, fb,block, quartile) %>%
filter(fb==1) %>%
group_by(subjID,block,quartile) %>%
tally()
return(list(
"miss_per_block"=miss_per_block,"rt_per_block"=RT_per_block,"rt_across_blocks"=RT_across_blocks,"hits_per_sextile"=correct_per_sextile))
}
split_trials_24 <- function(data){
data$trial <- as.integer(data$trial)
data$quartile <- 0
data[which(data$trial <= 6),]$quartile = 1
data[which(data$trial > 6 & data$trial <= 12),]$quartile = 2
data[which(data$trial > 12 & data$trial <= 18),]$quartile = 3
data[which(data$trial > 18 & data$trial <= 24),]$quartile = 4
data <- data[
with(data, order(subj_idx, block,trial)),
]
return(data)
}
split_trials_32 <- function(data){
data$trial <- as.integer(data$trial)
data$quartile <- 0
data[which(data$trial <= 8),]$quartile = 1
data[which(data$trial > 8 & data$trial <= 16),]$quartile = 2
data[which(data$trial > 16 & data$trial <= 24),]$quartile = 3
data[which(data$trial > 24 & data$trial <= 32),]$quartile = 4
data <- data[
with(data, order(subj_idx, block,trial)),
]
return(data)
}
split_trials_octile <- function(data){
data$trial <- as.integer(data$trial)
data$octile <- 0
data[which(data$trial <= 8),]$octile = 1
data[which(data$trial > 8 & data$trial <= 16),]$octile = 2
data[which(data$trial > 16 & data$trial <= 24),]$octile = 3
data[which(data$trial > 24 & data$trial <= 32),]$octile = 4
data <- data[
with(data, order(subj_idx, block,trial)),
]
return(data)
}
wes_cols= wes_palette("GrandBudapest1", n = 2)
## load data
data <- gather_data(files)
# redefine fb for visualization
data$fbprime <- rep("NA",nrow(data))
data[which(data$fb==0),]$fbprime = -1
data[which(data$fb==1),]$fbprime = 1
data[which(data$fb==2),]$fbprime = 0
# for the visualization, for the subject who completed block 3, b3 will count as b2
data[which(data$block==3),]$block <- rep(2,nrow(data[which(data$block==3),]))
data$block = as.factor(data$block)
levels(data$block) <- c("Block 1", "Block 2")
data$aStim = as.factor(data$aStim)
data_with_cumulsum <- compute_cumulative_sums(data)
data_octile <- split_trials_octile(data_with_cumulsum) # make sure you uncomment the last line of the function with 32-version
ggplot(data=data_octile[which(data_octile$block=="Block 2"),], aes(x=trial_separate, y=cumulsum_fb, group=aStim, color=aStim)) +
geom_line()+
geom_point(aes(fill=aStim),colour="black",alpha=.5, shape=21, size=3,position=position_dodge(0.2))+
scale_x_continuous(breaks = unique(trial_separate),limits=c(0.5,13.5))  +
scale_y_continuous(breaks = -13:13,limits=c(-13,13)) +
ylab("Cumulative sum of feedback")+
xlab("Trial per stimulus") +
guides(alpha=FALSE)+
theme(axis.title = element_text(size=12),
title = element_text(size=14),
plot.subtitle = element_text(size=14,color="darkblue"),
legend.text=element_text(size=12),
panel.grid.major = element_line(colour="white"),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "gray88"))+
facet_wrap( ~ subj_idx, ncol=3) +
labs(title="Cumulative sum of hits per astim (2x4[32][B2])")
ggplot(data=data_octile[which(data_octile$block=="Block 1"),], aes(x=trial_separate, y=cumulsum_fb, group=aStim, color=aStim)) +
geom_line()+
geom_point(aes(fill=aStim),colour="black",alpha=.5, shape=21, size=3,position=position_dodge(0.2))+
scale_x_continuous(breaks = unique(trial_separate),limits=c(0.5,13.5))  +
scale_y_continuous(breaks = -13:13,limits=c(-13,13)) +
ylab("Cumulative sum of feedback")+
xlab("Trial per stimulus") +
guides(alpha=FALSE)+
theme(axis.title = element_text(size=12),
title = element_text(size=14),
plot.subtitle = element_text(size=14,color="darkblue"),
legend.text=element_text(size=12),
panel.grid.major = element_line(colour="white"),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "gray88"))+
facet_wrap( ~ subj_idx, ncol=3) +
labs(title="Cumulative sum of hits per astim (2x4[32][B1])")
