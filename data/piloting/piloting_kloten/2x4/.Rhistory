c <- 2
c = 2
a <- 3
a = 3
a+c
d <- a + c
c <- a+b
a <- 2
b <- 3
c <- a+b
c
a <- 2
b <- 3
c <- a+b
c
install.packages(c("data.table", "dplyr", "ggplot2", "gridExtra", "gtable", "plyr", "readr", "rstudioapi", "tidyr", "viridis", "wesanderson"))
task <- "fbl_kloten"
#set inputs
#dirinput <- "N:/Users/phaller/mri_task_analysis/data/piloting/piloting_kloten/2x3_24"
#dirinput <- "N:/Users/phaller/mri_task_analysis/data/piloting/piloting_kloten/2x3_32"
dirinput <- "N:/Users/phaller/mri_task_analysis/data/piloting/piloting_kloten/2x4"
setwd(dirinput)
files <- dir(pattern=".txt", recursive=TRUE)
gather_data <- function(files){
# summarize all data in 1 data frame
datalist <- list()
for (i in 1:length(files)){
no_col <- max(count.fields(files[i], sep = "\t"))
D <- read_delim(
files[i],"\t", escape_double = FALSE, locale = locale(), trim_ws = TRUE)
D <- cbind(rep(substr(files[i],17,22),dim(D)[1]),D)
#D<-D[D$resp!=0,] # remove 'too slow ' responses
### Rename and transform some columns
colnames(D)[1] <- "subj_idx"
#D[,1] <- strtoi(D[,1])
D$trial = as.integer(D$trial)
D$aStim = as.integer(D$aStim)
#colnames(D)[grep("rt",colnames(D))] <- "RT"
D[grep("rt",colnames(D))] <- D[grep("rt",colnames(D))]/1000 # RTs in seconds
# don't use grep here, because it will find all instances of 'resp' (even colnames with name respOnset)
#names(D)[names(D) == "fb"] <- "response"
#D <- as_tibble(cbind(D,paste(D$vFile,D$aFile)))
#colnames(D)[ncol(D)] <- "pair"
datalist[[i]] <- D
}
transformed <- data.table::rbindlist(datalist) # combine all data frames in on
return(transformed)
}
## load data
data <- gather_data(files)
??read.delim
install.packages("readr")
## load data
data <- gather_data(files)
library(readr)
## load data
data <- gather_data(files)
View(data)
View(data)
summary(iris)
summary(iris$Sepal.Length)
names(iris)
tolower(iris)
names(iris)
tolower(x)
tolower(Sepal.Length)
tolower(iris)
names(iris)
names(iris)
toupper(iris)
names(iris)
install.packages("dplyr")
library(dplyr)
#filter()the data for species virginica
virginica <- filter(iris,species == "virginica")
#filter() the data for species virginica
virginica <- filter(iris, species == "virginica")
#filter() the data for species virginica
virginica <- filter(iris, species =="virginica")
head(virginica) # this displays the first six rows
head(virginica) # This dispalys the first six rows
#filter() the data for species virginica
virginica <- filter(iris, species == "virginica")
#filter() the data for species virginica
virginica <- filter(iris, species == "virginica")
head(virginica) # This dispalys the first six rows
library(help ="datasets")
library(datasets)
data("iris")
summary(iris)
summary(iri$Sepal.Length)
summary(iris$Sepal.Length)
summary(iris$Petal.Length)
names(iris)
tolower(iris)
names(iris)
install.packages("dplyr")
install.packages("dplyr")
virginica < - filter(iris, species == "virginica")
virginica  < - filter(iris, species == "virginica ")
virginica < - filter(iris, species == "virginica ")
virginica <- filter(iris, species == "virginica")
head(virginica)
filter(iris,species == "virginica")
virginica <- filter(iris,species== "virginica")
library(datasets)
data(iris)
summary(iris)
# filter() the data for species virginica
virginica <- filter(iris, species == "virginica")
head(virginica) # This dispalys the first six rows
# filter() the data for species virginica
virginica <- filter(iris, Species == "virginica")
head(virginica) # This dispalys the first six rows
iris
virginica <- filter(iris, species == "virginica")
iris
iris$Species
virginica <- filter(iris, Species == "virginica")
iris$Species
?filter
iris$Species
filter(iris,Species == "x")
filter(iris,iris$Species == "x")
filter(iris,iris$Species == "virginica")
virginica <- filter(iris,iris$Species == "virginica")
virginica
head(virginica)
library(dplyr)
virginica <- dplyr::filter(iris, Species == "virginica")
virginica
#filter() the data for species virginica
virginica <- dplyr::filter(iris, Species == "virginica")
head(virginica) # This dispalys the first six rows
tail(seoalLength6)
tail(sepalLength6)
tail(sepalLength6) # compare this to head ()
head(virginica) # This dispalys the first six rows
sepalLength6 < - dplyr::filter(iris, species == "virginica", sepal.length > 6)
tail(sepalLength6)
sepalLength6 < - filter(iris, species == "virginica", sepal.length > 6)
tail(sepalLength6) # compare this to head ()
tail(sepal.Length6) # compare this to head ()
tail(sepal.Length6) # compare this to head (6)
tail(sepal.Length6) # compare this to head()
head(virginica) # This dispalys the first six rows
tail(sepal.Length6) # compare this to head()
tail(sepal.Length6) # compare this to head()
tail(sepal.Length6) # compare this to head()
head(virginica) # This dispalys the first six rows
