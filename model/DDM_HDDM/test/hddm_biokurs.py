import os
import matplotlib
import matplotlib.pyplot as plt
import pandas as pd
import hddm
from patsy import dmatrix  # for generation of (regression) design matrices
import numpy as np         # for basic matrix operations
from pandas import Series  # to manipulate data-frames generated by hddm

#sys.stdout = open('ModelRecoveryOutput.txt', 'w')

data = hddm.load_csv('./performance_all_fbl.csv')
print('data loaded')

#data = hddm.utils.flip_errors(data)

#fig = plt.figure()
#ax = fig.add_subplot(111, xlabel='RT', ylabel='count', title='RT distributions')
#for i, subj_data in data.groupby('subj_idx'):
#    subj_data.rt.hist(bins=20, histtype='step', ax=ax)

#plt.savefig('hddm_demo_fig_00.pdf')
print('defining model...')
model = hddm.HDDM(data, depends_on={'a': ['trial','block'], 'v': ['trial', 'block']})
print('finding starting values...')
model.find_starting_values()
# start drawing 7000 samples and discarding 5000 as burn-in

# model = hddm.HDDMStimCoding(data, include='z', stim_col='stim', split_param='v')

#model.mcmc(dbname='traces.db', db='sqlite')
print('starting sampling...')
model.sample(2000, burn=20)