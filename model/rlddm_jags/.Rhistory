?gng_m1
??gng_m1
library(hBayesDM)
?gng_m1
dataPath = system.file("extdata/gng_exampleData.txt", package="hBayesDM")
output1 = gng_m1(data="example", niter=2000, nwarmup=1000, nchain=4, ncore=4)
output1 = gng_m1(data="example", niter=2000, nwarmup=1000, nchain=4, ncore=4)
dataPath = "N:\Users\phaller\R_hBayesDM\gng_exampleData.txt")
dataPath = "N:\\Users\\phaller\\R_hBayesDM\\gng_exampleData.txt")
dataPath = "N:\\Users\\phaller\\R_hBayesDM\\gng_exampleData.txt"
output1 = gng_m1(data="example", niter=2000, nwarmup=1000, nchain=4, ncore=4)
output1 = gng_m1(data=dataPath, niter=2000, nwarmup=1000, nchain=4, ncore=4)
library(hBayesDM)
output1 = gng_m1(data=dataPath, niter=2000, nwarmup=1000, nchain=4, ncore=4)
remove.packages("rstan")
if (file.exists(".RData")) file.remove(".RData")
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
install.packages("xfun")
pkgbuild::has_build_tools(debug = TRUE)
library("rstan")
rstan_options(auto_write = TRUE)
library(hBayesDM)
dataPath = "N:\\Users\\phaller\\R_hBayesDM\\gng_exampleData.txt"
output1 = gng_m1(data=dataPath, niter=2000, nwarmup=1000, nchain=4, ncore=4)
library(hBayesDM)
dataPath = "N:\\Users\\phaller\\R_hBayesDM\\gng_exampleData.txt"
output1 = gng_m1(data=dataPath, niter=2000, nwarmup=1000, nchain=4, ncore=4)
readLines(normalizePath("~/.R/Makevars"))
remove.packages("StanHeaders")
system.file("lib32", package = "StanHeaders")
install.packages("StanHeaders")
install.packages("StanHeaders")
library("rstan")
library(hBayesDM)
dataPath = "N:\\Users\\phaller\\R_hBayesDM\\gng_exampleData.txt"
output1 = gng_m1(data=dataPath, niter=2000, nwarmup=1000, nchain=4, ncore=4)
remove.packages("rstan")
remove.packages("StanHeaders")
remove.packages("rstantools")
remove.packages("hBayesDM")
install.packages("rstan", lib="\\idnetapp-homes3.uzh.ch\phalle$\Documents\R\win-library\3.5")
install.packages("rstan", lib="\\\idnetapp-homes3.uzh.ch\\phalle$\\Documents\\R\\win-library\\3.5")
install.packages("rstan", lib="\\idnetapp-homes3.uzh.ch\\phalle$\\Documents\\R\\win-library\\3.5")
install.packages("rstan", lib="\\\\idnetapp-homes3.uzh.ch\\phalle$\\Documents\\R\\win-library\\3.5")
library('rstan')
install.packages("rstantools", lib="\\\\idnetapp-homes3.uzh.ch\\phalle$\\Documents\\R\\win-library\\3.5")
install.packages("hBayesDM", lib="\\\\idnetapp-homes3.uzh.ch\\phalle$\\Documents\\R\\win-library\\3.5")
library(hBayesDM)
dataPath = "N:\\Users\\phaller\\R_hBayesDM\\gng_exampleData.txt"
output1 = gng_m1(data=dataPath, niter=2000, nwarmup=1000, nchain=4, ncore=4)
.libPaths()
remove.packages("rstan")
remove.packages("StanHeaders")
remove.packages("rstantools")
remove.packages("hBayesDM")
install.packages("rstan", lib="C:\\Program Files\\R\\R-3.5.2")
install.packages("rstan", lib = "C:\\Program Files\\R\\R-3.5.2")
install.packages("rstan", lib="C:\\Program Files\\R\\R-3.5.2\\library")
install.packages("rstan", lib="C:\\Program Files\\R\\R-3.5.2\\library")
library('rstan')
install.packages("rstantools", lib="C:\\Program Files\\R\\R-3.5.2\\library")
install.packages("hBayesDM", lib="C:\\Program Files\\R\\R-3.5.2\\library")
library(hBayesDM)
library(hBayesDM)
dataPath = "N:\\Users\\phaller\\R_hBayesDM\\gng_exampleData.txt"
output1 = gng_m1(data=dataPath, niter=2000, nwarmup=1000, nchain=4, ncore=4)
remove.packages('rcpp')
install.packages("Rcpp", lib="C:\\Program Files\\R\\R-3.5.2\\library")
install.packages("Rcpp", lib = "C:\\Program Files\\R\\R-3.5.2\\library")
remove.packages("hBayesDM")
install.packages("hBayesDM", lib="C:\\Program Files\\R\\R-3.5.2\\library")
library(hBayesDM)
dataPath = "N:\\Users\\phaller\\R_hBayesDM\\gng_exampleData.txt"
output1 = gng_m1(data=dataPath, niter=2000, nwarmup=1000, nchain=4, ncore=4)
pkgbuild::has_build_tools(debug = TRUE)
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR)) dir.create(dotR)
M <- file.path(dotR, ifelse(.Platform$OS.type == "windows", "Makevars.win", "Makevars"))
if (!file.exists(M)) file.create(M)
cat("\nCXX14FLAGS=-O3 -march=native -mtune=native",
if( grepl("^darwin", R.version$os)) "CXX14FLAGS += -arch x86_64 -ftemplate-depth-256" else
if (.Platform$OS.type == "windows") "CXX11FLAGS=-O3 -march=native -mtune=native" else
"CXX14FLAGS += -fPIC",
file = M, sep = "\n", append = TRUE)
library("rstan")
options(mc.cores = parallel::detectCores())
rstan_options(auto_write = TRUE)
library("rstan")
detach("package:rstan", unload=TRUE)
library("rstan")
dataPath = "N:\\Users\\phaller\\R_hBayesDM\\gng_exampleData.txt"
output1 = gng_m1(data=dataPath, niter=2000, nwarmup=1000, nchain=4, ncore=4)
pkgbuild::has_build_tools(debug = TRUE)
library(hBayesDM)
dataPath = system.file("extdata/gng_exampleData.txt", package="hBayesDM")
.libPaths()
library(hBayesDM)
install.packages("hBayesDM", lib="C:\\Program Files\\R\\R-3.5.2\\library")
install.packages("hBayesDM", lib = "C:\\Program Files\\R\\R-3.5.2\\library")
install.packages("hBayesDM", lib.loc = "C:\\Program Files\\R\\R-3.5.2\\library")
library("hBayesDM", lib.loc = "C:\\Program Files\\R\\R-3.5.2\\library")
dataPath = system.file("extdata/gng_exampleData.txt", package="hBayesDM")
output1 = gng_m1(data=dataPath, niter=20, nwarmup=5, nchain=4, ncore=4)
library("hBayesDM",dependencies = TRUE, lib.loc = "C:\\Program Files\\R\\R-3.5.2\\library")
detach("package:Rcpp", unload=TRUE)
detach("package:hBayesDM", unload=TRUE)
library("rstan",lib.loc = "C:\\Program Files\\R\\R-3.5.2\\library")
library("Rcpp",lib.loc = "C:\\Program Files\\R\\R-3.5.2\\library")
library("Rcpp",lib.loc = "C:\\Program Files\\R\\R-3.5.2\\library")
library("Rcpp", lib.loc="C:/Program Files/R/R-3.5.2/library")
library("rstan", lib.loc="C:/Program Files/R/R-3.5.2/library")
library("hBayesDM", lib.loc="C:/Program Files/R/R-3.5.2/library")
dataPath = system.file("extdata/gng_exampleData.txt", package="hBayesDM")
output1 = gng_m1(data=dataPath, niter=20, nwarmup=5, nchain=4, ncore=4)
library("StanHeaders", lib.loc="C:/Program Files/R/R-3.5.2/library")
detach("package:StanHeaders", unload=TRUE)
detach("package:rstan", unload=TRUE)
detach("package:Rcpp", unload=TRUE)
detach("package:hBayesDM", unload=TRUE)
library("StanHeaders", lib.loc="C:/Program Files/R/R-3.5.2/library")
library("rstan",lib.loc = "C:\\Program Files\\R\\R-3.5.2\\library")
library("Rcpp",lib.loc = "C:\\Program Files\\R\\R-3.5.2\\library")
library("hBayesDM",lib.loc = "C:\\Program Files\\R\\R-3.5.2\\library")
dataPath = system.file("extdata/gng_exampleData.txt", package="hBayesDM")
output1 = gng_m1(data=dataPath, niter=20, nwarmup=5, nchain=4, ncore=4)
.libPaths()
assign(".lib.loc", "C:/Program Files/R/R-3.5.2/library", envir = environment(.libPaths))
library("hBayesDM")
library("hBayesDM")
library("hBayesDM", lib.loc="C:/Program Files/R/R-3.5.2/library")
dataPath = system.file("extdata/gng_exampleData.txt", package="hBayesDM")
output1 = gng_m1(data=dataPath, niter=20, nwarmup=5, nchain=4, ncore=4)
detach("package:hBayesDM", unload=TRUE)
.libPaths()
library(hBayesDM)
dataPath = system.file("extdata/gng_exampleData.txt", package="hBayesDM")
detach("package:hBayesDM", unload=TRUE)
library("hBayesDM", lib.loc="C:/Program Files/R/R-3.5.2/library")
dataPath = system.file("extdata/gng_exampleData.txt", package="hBayesDM")
output1 = gng_m1(data=dataPath, niter=20, nwarmup=5, nchain=4, ncore=4)
detach("package:hBayesDM", unload=TRUE)
detach("package:Rcpp", unload=TRUE)
assign(".lib.loc", "C:/Program Files/R/R-3.5.2/library", envir = environment(.libPaths))
library("hBayesDM")
detach("package:hBayesDM", unload=TRUE)
library("Rcpp", lib.loc="C:/Program Files/R/R-3.5.2/library")
library("rstan", lib.loc="C:/Program Files/R/R-3.5.2/library")
library("StanHeaders", lib.loc="C:/Program Files/R/R-3.5.2/library")
library("StanHeaders", lib.loc="\\\\idnetapp-homes3.uzh.ch/phalle$/Documents/R/win-library/3.5")
output1 = gng_m1(data=dataPath, niter=20, nwarmup=5, nchain=4, ncore=4)
library("hBayesDM", lib.loc="C:/Program Files/R/R-3.5.2/library")
output1 = gng_m1(data=dataPath, niter=20, nwarmup=5, nchain=4, ncore=4)
install.packages("StanHeaders", lib="C:\\Program Files\\R\\R-3.5.2\\library")
install.packages("StanHeaders", lib = "C:\\Program Files\\R\\R-3.5.2\\library")
library("StanHeaders", lib.loc="C:/Program Files/R/R-3.5.2/library")
library("hBayesDM")
dataPath = system.file("extdata/gng_exampleData.txt", package="hBayesDM")
output1 = gng_m1(data=dataPath, niter=20, nwarmup=5, nchain=4, ncore=4)
.libPaths()
# output may look like this
#[1] "\\\\idnetapp-homes3.uzh.ch/phalle$/Documents/R/win-library/3.5"
#[2] "C:/Program Files/R/R-3.5.2/library"
assign(".lib.loc", "C:/Program Files/R/R-3.5.2/library", envir = environment(.libPaths))
#install.packages("rstan", lib="C:\\Program Files\\R\\R-3.5.2\\library")
#install.packages("StanHeaders", lib="C:\\Program Files\\R\\R-3.5.2\\library")
#install.packages("rstantools", lib="C:\\Program Files\\R\\R-3.5.2\\library")
#install.packages("hBayesDM", lib="C:\\Program Files\\R\\R-3.5.2\\library")
#install.packages("Rcpp", lib="C:\\Program Files\\R\\R-3.5.2\\library")
# after successful installation, load required packages
library("StanHeaders", lib.loc="C:/Program Files/R/R-3.5.2/library")
library("rstan", lib.loc="C:/Program Files/R/R-3.5.2/library")
library("Rcpp", lib.loc="C:/Program Files/R/R-3.5.2/library")
library("hBayesDM", lib.loc="C:/Program Files/R/R-3.5.2/library")
dataPath = "N:/studies/AllRead/Feedback learning/ddmodeling/children_abmp_fb_as_choice"
ddm_model_abmp_adults = choiceRT_ddm(
paste(dataPath, "model_input_abmp_children_190402.txt", sep="/"), niter=4000, nwarmup=1000, nchain=4, ncore=4, inits="fixed",
RTbound=0.05)
X <- c(11,12,13,14,21,22,23,24,31,32,33,34)
sample(X)
X <- c(11,12,13,14,21,22,23,24,31,32,33,34,11,12,13,14,21,22,23,24,31,32,33,34,11,12,13,14,21,22,23,24,31,32,33,34)
sample(X)
length(X)
sample(X)
sample(X)
sample(X)
sample(X)
sample(X)
X <- c(rep(112,113,121,131,221,223,212,232,331,332,313,323),3)
X
X <- rep(c(112,113,121,131,221,223,212,232,331,332,313,323),3)
X
length(X)
sample(X)
sample(X)
sample(X)
sample(X)
sample(X)
sample(X)
sample(X)
install.packages("RWiener")
library(RWiener)
stim <- c(112,121,113,131,114,141,221,212,223,232,224,242,331,313,332,323,334,343)
length(stim)
stim <- rep(stim,2)
stim
sample(stim,replace=FALSE)
sample(stim,replace=FALSE)
sample(stim,replace=FALSE)
sample(stim,replace=FALSE)
sample(stim,replace=FALSE)
sample(stim,replace=FALSE)
library(rjags)
install.packages(rjags)
install.packages("rjags", lib="C:/Program Files/R/R-3.5.2/library")
library(rjags)
library(rjags)
load.module("wiener")
load.module("wiener")
library(rjags)
library(coda)
load.module("wiener")
path <- dirname(rstudioapi::getActiveDocumentContext()$path)
path <- dirname(rstudioapi::getActiveDocumentContext()$path)
#path <- "/home/padraigh/Dokumente/Uni/NSC/Thesis/mri_task_analysis/model/rlddm_jags/"
model_path <- paste0(path,"/rlddm_reduced.jag")
data_path <- paste0(path,"/input_6subj_wtrials_1block.txt")
setwd(path)
raw_data <- data.table::fread(file = data_path, header = TRUE, sep = "\t", data.table = TRUE,
fill = TRUE, stringsAsFactors = TRUE, logical01 = FALSE)
raw_data <- raw_data[which(raw_data$RT > 0.3),]
names(raw_data)[names(raw_data)=="choice"] <- "correct"
## prepare data for jags
#raw_data$row <- seq.int(nrow(raw_data))
DT_trials <- raw_data[, .N, by = "subjID"]
subjs     <- DT_trials$subjID
n_subj    <- length(subjs)
# assign new trial number for excluded decisions
for (subj in subjs){
sub <- which(raw_data$subjID==subj)
raw_data[sub,]$trial <- seq.int(nrow(raw_data[sub,]))
}
# first is Sx1 matrix identifying all first trials of a subject for each choice
first <- which(raw_data$trial==1)
# last is a Sx1 matrix identifying all last trials of a subject for each choice
last <- as.integer(first + DT_trials$N - 1)
# incorrect is the inverse vector of choice and is needed to update the ev for the non-choices
raw_data$incorrect <- as.integer(ifelse(raw_data$correct==1, 2, 1))
# define the values for the rewards
value <- ifelse(raw_data$correct==1, 0, 1)
## all RT with negative choices -> -1
new_RT <- ifelse(raw_data$correct==1, raw_data$RT*-1, raw_data$RT)
dat <- list("S" = n_subj, "iter" = raw_data$trial, "correct" = raw_data$correct, "incorrect" = raw_data$incorrect,
"RT" = new_RT, "first" = first, "last" = last, "value"=value)  # names list of numbers
##### Initial values
inits <- list( etag_mu=0.2, ag_mu=1.7,ig_mu=0, mg_mu=3.5, tg_mu=0.3)
View(raw_data)
jags.m <- jags.model( file = model_path, inits=inits,data=dat, n.chains=1, n.adapt=500)
### take a look at the posterior distributions
params <- c("eta")
### take a look at the posterior distributions
params <- c("eta")
samples_eta <- coda.samples(jags.m, params, n.iter = 2000)
# these are the values for the positive and negative learning rates
# eta[s,1] are the negative feedbacks
plot(samps[,c(1,32)])
plot(samples_eta)
rm(jags.m)
jags.m <- jags.model( file = model_path, inits=inits,data=dat, n.chains=4, n.adapt=1000)
### take a look at the posterior distributions
params <- c("eta")
rm(samples_eta)
samples_eta <- coda.samples(jags.m, params, n.iter = 4000)
plot(samples_eta)
samples_eta
View(jags.m)
tidy(samples_eta, chain = TRUE)
data(line)
tidy(line)
install.packages("remotes")
remotes::install_github("njtierney/dsmcmc")
library(dsmcmc)
tidy(samples_eta, chain = TRUE)
library(mmcc)
tidy(samples_eta, chain = TRUE)
rm(jags.m)
rm(samples_eta)
rm(line)
rm(inits)
jags.m <- jags.model( file = model_path, data=dat, n.chains=4, n.adapt=1000)
##### Initial values
inits <- list( etag_mu=0.2, ag_mu=1.7,ig_mu=0, mg_mu=3.5, tg_mu=0.3)
jags.m <- jags.model( file = model_path, data=dat, n.chains=4, n.adapt=1000)
jags.m <- jags.model( file = model_path, inits=inits, data=dat, n.chains=4, n.adapt=1000)
### take a look at the posterior distributions
params <- c("eta","i","m","t")
samples_eta <- coda.samples(jags.m, params, n.iter = 4000)
samples <- coda.samples(jags.m, params, n.iter = 4000)
rm(jags.m)
jags.m <- jags.model( file = model_path, inits=inits, data=dat, n.chains=4, n.adapt=1000)
### take a look at the posterior distributions
params <- c("eta","i","m","t")
samples <- coda.samples(jags.m, params, n.iter = 4000)
plot(samples)
tidy(samples, chain = TRUE)
